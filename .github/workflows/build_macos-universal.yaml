name: Build Universal C++ Application with Boost

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        architecture: [x86_64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Boost for ${{ matrix.architecture }}
        run: |
          if [ "${{ matrix.architecture }}" == "x86_64" ]; then
            ARCH_FLAGS="-arch x86_64"
          else
            ARCH_FLAGS="-arch arm64"
          fi
          ./bootstrap.sh
          ./b2 address-model=64 architecture=$ARCH_FLAGS

      - name: Install Boost for ${{ matrix.architecture }}
        run: |
          if [ "${{ matrix.architecture }}" == "x86_64" ]; then
            sudo ./b2 install --prefix=/usr/local/boost-x86_64
          else
            sudo ./b2 install --prefix=/usr/local/boost-arm64
          fi

      - name: Merge Boost libraries to create universal binaries
        if: matrix.architecture == 'x86_64'
        run: |
          mkdir -p /usr/local/boost-universal/lib
          for lib in /usr/local/boost-x86_64/lib/*.a; do
            libname=$(basename $lib)
            lipo -create $lib /usr/local/boost-arm64/lib/$libname -output /usr/local/boost-universal/lib/$libname
          done

      # - name: Build universal C++ application
      #   if: matrix.architecture == 'x86_64'
      #   run: |
      #     mkdir -p build
      #     cd build
      #     cmake .. -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -DBOOST_ROOT=/usr/local/boost-universal
      #     make
      #
      # - name: Upload artifacts
      #   if: matrix.architecture == 'x86_64'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: universal-application
      #     path: build/my_application
