name: Build Universal C++ Application with Boost

on:
  push:
    branches:
      - '*'

jobs:
  build:
    runs-on: macos-latest


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download boost
        run: |
          curl -L https://dl.bintray.com/boostorg/release/1.76.0/source/boost_1_76_0.tar.gz -o boost.tar.gz
          tar -xzf boost.tar.gz

      - name: Build and install Boost for both architectures
        run: |
          for ARCH in x86_64 arm64; do
            if [ "$ARCH" == "x86_64" ]; then
              ARCH_FLAGS="-arch x86_64"
              PREFIX="/usr/local/boost-x86_64"
            else
              ARCH_FLAGS="-arch arm64"
              PREFIX="/usr/local/boost-arm64"
            fi
            cd boost_1_76_0
            ./bootstrap.sh
            ./b2 address-model=64 architecture=$ARCH_FLAGS
            sudo ./b2 install --prefix=$PREFIX
            cd ..
            # Clean up after each build
            rm -rf boost_1_76_0
            tar -xzf boost.tar.gz
          done

      - name: Merge Boost libraries to create universal binaries
        run: |
          mkdir -p /usr/local/boost-universal/lib
          for lib in /usr/local/boost-x86_64/lib/*.a; do
            libname=$(basename $lib)
            lipo -create $lib /usr/local/boost-arm64/lib/$libname -output /usr/local/boost-universal/lib/$libname
          done

      # - name: Build universal C++ application
      #   run: |
      #     mkdir -p build
      #     cd build
      #     cmake .. -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64" -DBOOST_ROOT=/usr/local/boost-universal
      #     make
      #
      # - name: Upload artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: universal-application
